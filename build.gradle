plugins {
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.4.31"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "org.jetbrains.dokka" version "1.4.0-rc"
}

allprojects {
    apply plugin: "org.jetbrains.dokka"
    apply plugin: "maven-publish"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "com.github.johnrengelman.shadow"

    shadowJar {
        archiveClassifier.set("")
        relocate "me.mattstudios.mfmsg", "dev.jaims.mcutils.libs.mfmsg"
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.jaims.dev/repository/all/" }
    }

    dependencies {
        compileOnly "me.bristermitten:pdm:0.0.33"
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compileOnly "com.github.jkcclemens:khttp:39f76b4186"

        testImplementation group: "org.jetbrains.kotlin", name: "kotlin-test-junit", version: "1.4.0"
    }
}

dokkaHtmlCollector {
    outputDirectory = "$projectDir/docs"
}

def ver = "2.2.13"

group "dev.jaims"
version ver

subprojects {
    group "dev.jaims.mcutils"
    version ver

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            mavenLocal()
            maven {
                def releasesRepoUrl = "https://repo.jaims.dev/repository/maven-releases/"
                def snapshotsRepoUrl = "https://repo.jaims.dev/repository/maven-snapshots/"
                url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username = project.property("sonatype.user")
                    password = project.property("sonatype.password")
                }
            }
        }
    }

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(17))
    }

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
